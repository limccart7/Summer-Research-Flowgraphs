options:
  parameters:
    author: ubuntu
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: LoRa_tx_test_flowgraph
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: LoRa_tx_test_flowgraph
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bw
  id: variable_config
  parameters:
    comment: ''
    config_file: /home/ubuntu/LoRa_Tests/LoRa_config.ini
    option: bw
    section: LoRa
    type: int
    value: '62500'
    writeback: None
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 4.0]
    rotation: 0
    state: true
- name: freq
  id: variable
  parameters:
    comment: ''
    value: '915000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '1000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12.0]
    rotation: 0
    state: enabled
- name: sf
  id: variable_config
  parameters:
    comment: ''
    config_file: /home/ubuntu/LoRa_Tests/LoRa_config.ini
    option: sf
    section: LoRa
    type: int
    value: '7'
    writeback: None
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 4.0]
    rotation: 0
    state: true
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [224, 272.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import time\nimport tkinter as tk\nfrom tkinter import simpledialog\n\
      from gnuradio import gr\nimport pmt\n\nclass FileLineTransmitter(gr.sync_block):\n\
      \    def __init__(self, file_path = \"/home/ubuntu/Desktop/LoRa BER Testing/tx_test_data\"\
      , sf=7, bw=62.5, cr=5):\n        gr.sync_block.__init__(\n            self,\n\
      \            name=\"FileLineTransmitter\",\n            in_sig=None,\n     \
      \       out_sig=None,\n        )\n        self.message_port_register_out(pmt.intern(\"\
      out\"))\n\n        # Open the file and read lines\n        self.lines = self.load_file(file_path)\n\
      \        self.current_index = 0\n        self.transmit_delay = 1.5  # seconds\n\
      \        self.sf = sf\n        self.bw = bw\n        self.cr = cr\n\n    def\
      \ load_file(self, file_path):\n        try:\n            with open(file_path,\
      \ 'r') as file:\n                return file.readlines()\n        except Exception\
      \ as e:\n            print(f\"Error reading file: {e}\")\n            return\
      \ []\n\n    def work(self, input_items, output_items):\n        if self.current_index\
      \ < len(self.lines):\n            # Prepare the message to send\n          \
      \  print(\"Transmitting line at: \" + str(self.sf) + str(self.bw) + str(self.cr))\n\
      \            line = self.lines[self.current_index].strip()\n            message\
      \ = pmt.intern(line)\n            \n            # Send the message\n       \
      \     self.message_port_pub(pmt.intern(\"out\"), message)\n            self.current_index\
      \ += 1\n            \n            # Sleep for the specified delay\n        \
      \    time.sleep(self.transmit_delay)\n        else:\n            print(\"file\
      \ done transmitting\")\n\n        # Indicate that we have finished processing\n\
      \        return len(output_items)\n\n"
    affinity: ''
    alias: ''
    bw: bw
    comment: ''
    cr: '5'
    file_path: '"/home/ubuntu/Desktop/LoRa BER Testing/tx_test_data.txt"'
    maxoutbuf: '0'
    minoutbuf: '0'
    sf: sf
  states:
    _io_cache: ('FileLineTransmitter', 'FileLineTransmitter', [('file_path', "'/home/ubuntu/Desktop/LoRa
      BER Testing/tx_test_data'"), ('sf', '7'), ('bw', '62.5'), ('cr', '5')], [],
      [('out', 'message', 1)], '', ['bw', 'cr', 'sf'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [0, 164.0]
    rotation: 0
    state: true
- name: lora_tx_0
  id: lora_tx
  parameters:
    affinity: ''
    alias: ''
    bw: bw
    comment: ''
    cr: '1'
    frame_zero_padd: '1280'
    has_crc: 'True'
    impl_head: 'False'
    ldro: '2'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: '1000000'
    sf: sf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 116.0]
    rotation: 0
    state: true
- name: soapy_limesdr_sink_0
  id: soapy_limesdr_sink
  parameters:
    affinity: ''
    alias: ''
    bandwidth: '0.0'
    center_freq: freq
    comment: ''
    dev_args: ''
    freq_correction: '0'
    gain: '30.0'
    samp_rate: samp_rate
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 168.0]
    rotation: 0
    state: enabled

connections:
- [epy_block_0, out, blocks_message_debug_0, print]
- [epy_block_0, out, lora_tx_0, in]
- [lora_tx_0, '0', soapy_limesdr_sink_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.3.0
